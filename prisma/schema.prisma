// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VaultPlatform {
  Jupiter
  Kamino
}

model User {
  id         String     @id @default(uuid())
  name       String?
  wallet     String?
  strategies Strategy[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Vault {
  id               String        @id @default(uuid())
  public_key       String        @unique
  name             String
  platform         VaultPlatform
  our_lp_mint      String
  protocol_lp_mint String
  input_token_mint String

  current_tvl         Decimal @default(0) @db.Decimal(38, 18)
  current_apy         Decimal @default(0) @db.Decimal(38, 18)
  current_asset_price Decimal @default(0) @db.Decimal(38, 18)
  current_yard_reward Decimal @default(0) @db.Decimal(38, 18)

  vault_strategies VaultStartegy[]
  vault_histories  VaultHistory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model VaultHistory {
  id      String @id @default(uuid())
  vault   Vault  @relation(fields: [vaultId], references: [id])
  vaultId String

  tvl         Decimal @default(0) @db.Decimal(38, 18)
  apy         Decimal @default(0) @db.Decimal(38, 18)
  asset_price Decimal @default(0) @db.Decimal(38, 18)
  yard_reward Decimal @default(0) @db.Decimal(38, 18)

  recorded_at DateTime @default(now())

  @@unique([vaultId, recorded_at])
  @@index([vaultId, recorded_at])
}

model Strategy {
  id                  String               @id @default(uuid())
  user_id             String
  vault_strategies    VaultStartegy[]
  strategy_statistics StartegyStatistics[]
  name                String?
  user                User                 @relation(fields: [user_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model VaultStartegy {
  id                   String   @id @default(uuid())
  strategy_id          String
  vault_id             String
  strategy             Strategy @relation(fields: [strategy_id], references: [id])
  vault                Vault    @relation(fields: [vault_id], references: [id])
  deposited_amount     Decimal  @db.Decimal(38, 18) // after deposit -> query Price API and get USD price
  deposited_amount_usd Decimal  @db.Decimal(38, 18)
  interest_earned      Decimal  @db.Decimal(38, 18)
  interest_earned_usd  Decimal  @db.Decimal(38, 18)
  ownership_fraction   Decimal  @default(0) @db.Decimal(38, 18)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model StartegyStatistics {
  id          String   @id @default(uuid())
  strategy_id String
  date        DateTime
  price       Decimal  @db.Decimal(38, 18)
  strategy    Strategy @relation(fields: [strategy_id], references: [id])
}
